{
  "root": true,
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:import/recommended",
    "plugin:eslint-comments/recommended",
    "plugin:prettier/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsdoc/recommended",
    "plugin:storybook/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["@typescript-eslint", "react", "react-hooks", "header", "jest"],
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "@ps-analysis-tool/eslint-import-resolver": {
        "mapping": {
          "^@ps-analysis-tool\\/(.*)\\/(.*)": "./packages/$1/src/$2",
          "^@ps-analysis-tool\\/(.*)": "./packages/$1/src/"
        },
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      },
      "typescript": {}
    }
  },
  "ignorePatterns": [
    "**/node_modules/**",
    "dist/**",
    "dist-types/**",
    "out/**",
    "data/**",
    "coverage/**"
  ],
  "rules": {
    "array-callback-return": "error",
    "block-scoped-var": "error",
    "complexity": ["error", { "max": 20 }],
    "consistent-return": "error",
    "curly": ["error", "all"],
    "default-case": "error",
    "eol-last": "error",
    "eqeqeq": "error",
    "guard-for-in": "error",
    "header/header": [
      "error",
      "block",
      [
        "",
        {
          "pattern": " \\* Copyright \\d{4} Google LLC",
          "template": " * Copyright 2023 Google LLC"
        },
        " *",
        " * Licensed under the Apache License, Version 2.0 (the \"License\");",
        " * you may not use this file except in compliance with the License.",
        " * You may obtain a copy of the License at",
        " *",
        " *     https://www.apache.org/licenses/LICENSE-2.0",
        " *",
        " * Unless required by applicable law or agreed to in writing, software",
        " * distributed under the License is distributed on an \"AS IS\" BASIS,",
        " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        " * See the License for the specific language governing permissions and",
        " * limitations under the License.",
        " "
      ]
    ],
    "no-await-in-loop": "error",
    "no-constant-binary-expression": "error",
    "no-extra-bind": "error",
    "no-extra-label": "error",
    "no-floating-decimal": "error",
    "no-implicit-coercion": "error",
    "no-implicit-globals": "error",
    "no-implied-eval": "error",
    "no-loop-func": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-wrappers": "error",
    "no-multiple-empty-lines": "error",
    "no-trailing-spaces": "error",
    "import/no-cycle": "error",
    "import/no-useless-path-segments": [
      "error",
      {
        "noUselessIndex": true
      }
    ],
    "import/no-relative-packages": "error",
    "jsdoc/require-param-type": "off",
    "jsdoc/require-returns-type": "off",
    "no-restricted-properties": "error",
    "no-return-assign": "error",
    "no-return-await": "error",
    "no-sequences": "error",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "error",
    "no-template-curly-in-string": "error",
    "no-throw-literal": "error",
    "no-unmodified-loop-condition": "error",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": "error",
    "no-useless-call": "error",
    "no-useless-concat": "error",
    "no-console": "error",
    "no-duplicate-imports": "error",
    "no-var": "error",
    "prefer-arrow-callback": [
      "error",
      {
        "allowNamedFunctions": true
      }
    ],
    "prefer-const": "error",
    "prefer-object-spread": "error",
    "prefer-promise-reject-errors": "error",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "radix": ["error", "as-needed"],
    "require-await": "error",
    "rest-spread-spacing": ["error", "never"],
    "react/forbid-component-props": [
      "error",
      {
        "forbid": ["for"]
      }
    ],
    "@typescript-eslint/ban-ts-comment": "off"
  },
  "overrides": [
    {
      "files": ["**/jest.*.js", "**/*.cjs"],
      "env": {
        "node": true,
        "jest/globals": true
      },
      "rules": {
        "eslint-comments/require-description": "off",
        "@typescript-eslint/no-var-requires": "off"
      }
    }
  ]
}
